server {
    listen 80;
    server_name localhost;
    
    # Character encoding
    charset utf-8;
    
    # Root directory for the application
    root /home/mariusz/projects/portfolio_azure;
    index index.html index.php;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Frontend - serve built Vue.js application
    location / {
        try_files $uri $uri/ @frontend;
    }
    
    # Fallback for frontend routing (SPA)
    location @frontend {
        # For development: proxy to Vite dev server
        # proxy_pass http://localhost:3000;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_cache_bypass $http_upgrade;
        
        # For production: serve built files
        root /home/mariusz/projects/portfolio_azure/frontend/dist;
        try_files $uri $uri/ /index.html;
    }
    
    # Backend API - proxy to PHP
    location /api {
        # For development: proxy to PHP built-in server
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Alternative for production: serve PHP directly
        # root /home/mariusz/projects/portfolio_azure/backend/public;
        # try_files $uri $uri/ /index.php$is_args$args;
        # include fastcgi_params;
        # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }
    
    # Direct access to backend (alternative endpoint)
    location /backend {
        alias /home/mariusz/projects/portfolio_azure/backend/public;
        
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        }
        
        try_files $uri $uri/ /backend/index.php$is_args$args;
    }
    
    # Static assets optimization
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Deny access to sensitive files
    location ~ /\.(?!well-known) {
        deny all;
    }
    
    location ~ /(composer\.(json|lock)|package\.(json|lock)|\.env|\.git) {
        deny all;
    }
    
    # Error and access logs
    error_log /var/log/nginx/portfolio_error.log;
    access_log /var/log/nginx/portfolio_access.log;
}

# Optional: HTTPS configuration
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#     
#     ssl_certificate /path/to/certificate.crt;
#     ssl_certificate_key /path/to/private.key;
#     
#     # Include the same configuration as above
#     include /home/mariusz/projects/portfolio_azure/nginx.conf;
# }